<?php

return [
    'required' => 'The field {%1} is required',
    'email' => 'The {%1} field must be a valid email address',
    'minLen' => 'The {%1} field needs to be at least {%2} characters',
    'maxLen' => 'The {%1} field needs to be {%2} characters or less',
    'exactLen' => 'The {%1} field needs to be exactly {%2} characters',
    'alpha' => 'The {%1} field may only contain letters',
    'alphaNumeric' => 'The {%1} field may only contain letters and numbers',
    'alphaDash' => 'The {%1} field may only contain letters, dashes and underscores',
    'alphaSpace' => 'The {%1} field may only contain letters and spaces',
    'numeric' => 'The {%1} field must be a number',
    'integer' => 'The {%1} field must be a number without a decimal',
    'float' => 'The {%1} field must be a number with a decimal point',
    'boolean' => 'The {%1} field has to be either true or false',
    'url' => 'The {%1} field has to be a URL',
    'urlExists' => 'The {%1} URL does not exist',
    'ip' => 'The {%1} field needs to be a valid IP address',
    'ipv4' => 'The {%1} field needs to contain a valid IPv4 address',
    'ipv6' => 'The {%1} field needs to contain a valid IPv6 address',
    'creditCard' => 'The {%1} is not a valid credit card number',
    'name' => 'The {%1} should be a full name',
    'contains' => 'The {%1} can only be one of the following: {%2}',
    'containsList' => 'The {%1} is not a valid option',
    'doesntContainsList' => 'The {%1} field contains a value that is not accepted',
    'streetAddress' => 'The {%1} field needs to be a valid street address',
    'iban' => 'The {%1} field needs to contain a valid IBAN',
    'minNumeric' => 'The {%1} field needs to be a numeric value, equal to, or higher than {%2}',
    'maxNumeric' => 'The {%1} field needs to be a numeric value, equal to, or lower than {%2}',
    'date' => 'The {%1} must be a valid date',
    'starts' => 'The {%1} field needs to start with: {%2}',
    'phoneNumber' => 'The {%1} field needs to be a valid Phone Number',
    'regex' => 'The {%1} field needs to contain a value with valid format',
    'jsonString' => 'The {%1} field needs to contain a valid JSON format string',
    'same' => 'The {%1} field should be same as the {%2}',
    'same_password' => 'The {%1} field should be same as the New password',
    'unique' => 'The {%1} field should only contain unique value',
    'fileSize' => 'The file size should correspond to the {%1}',
    'fileMimeType' => 'The file mimetype should correspond to the {%1}',
    'fileExtension' => 'The file extension should correspond to the {%1}',
    'imageDimensions' => 'The image dimensions should correspond to the {%1}',
    'nonExistingRecord' => 'There is no record matched to the {%1}',
    'nonEqualValues' => 'Values are not equal',
    'unauthorizedRequest' => 'Unauthorized request',
    'uniqueUser' => 'The value of {%1} field is already exists in our database',
    'passwordsDoNotMatch' => 'Passwords do not match',
    'password_check' => 'The current password is incorrect',
    'new_password' => 'New password',
    'current_password' => 'Current Password',
    'confirm_password' => 'Confirm Password',
    'captcha' => [
        'timeout-or-duplicate' => 'Timeout or duplicate.',
        'missing-input-secret' => 'The secret parameter is missing.',
        'invalid-input-secret' => 'The secret parameter is invalid or malformed.',
        'missing-input-response' => 'The response parameter is missing.',
        'invalid-input-response' => 'The response parameter is invalid or malformed.',
        'bad-request' => 'The request is invalid or malformed.',
        'internal-empty-response' => 'The captcha response is required.',
        'replay-attack' => 'Potential replay attack detected.',
    ]
];
